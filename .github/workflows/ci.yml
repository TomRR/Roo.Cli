name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Which job to run? (windows/linux/macos/nuget-pack//nuget-publish/all)'
        required: true
        default: all

jobs:
  # -------------------------
  # Build + Test
  # -------------------------
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_dotnet

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Test
        run: dotnet test --no-build --verbosity normal -c Release
        
  # -------------------------
  # AOT Windows
  # -------------------------
  aot-publish-windows:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event.inputs.target == 'all' || github.event.inputs.target == 'windows'
    uses: ./.github/workflows/build_aot.yml
    with:
      runner_os: windows-latest
      runtime: win-x64
    secrets: inherit

  # -------------------------
  # AOT Linux
  # -------------------------
  aot-publish-linux:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event.inputs.target == 'all' || github.event.inputs.target == 'linux'
    uses: ./.github/workflows/build_aot.yml
    with:
      runner_os: ubuntu-latest
      runtime: linux-x64
    secrets: inherit

  # -------------------------
  # AOT macOS
  # -------------------------
  aot-publish-macos:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' ||  github.event.inputs.target == 'all' || github.event.inputs.target == 'macos'
    uses: ./.github/workflows/build_aot.yml
    with:
      runner_os: macos-latest
      runtime: osx-arm64
    secrets: inherit

  # -------------------------
  # NuGet
  # -------------------------
  nuget-pack:
    runs-on: ubuntu-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event.inputs.target == 'all' || github.event.inputs.target == 'nuget-pack' || github.event.inputs.target == 'nuget-publish'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_dotnet
        
      - name: Restore
        run: dotnet restore
      - name: Pack NuGet
        run: dotnet pack src/Roo.Cli/Roo.Cli.csproj -c Release -o ./nupkg
      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v4
        with:
          name: roo-cli-nuget-package
          path: ./nupkg
          retention-days: ${{ startsWith(github.ref, 'refs/tags/') && '365' || github.ref == 'refs/heads/main' && '3' || '1' }}
          
  nuget-publish:
    runs-on: ubuntu-latest
    needs: nuget-pack
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.target == 'nuget-publish'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_dotnet
        
      - name: Download NuGet artifact
        uses: actions/download-artifact@v4
        with:
          name: roo-cli-nuget-package
          path: ./nupkg
      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json