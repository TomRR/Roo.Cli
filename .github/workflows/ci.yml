name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Which job to run? (windows/linux/macos/nuget-pack/nuget-publish/all)'
        required: true
        default: all

jobs:
  # -------------------------
  # Build + Test
  # -------------------------
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Test
        run: dotnet test --no-build --verbosity normal -c Release

  # -------------------------
  # AOT Publish per OS
  # -------------------------
  aot-publish-windows:
    runs-on: windows-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' || github.event.inputs.target == 'windows' || github.event.inputs.target == 'all'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish AOT (Windows)
        run: dotnet publish -c Release -r win-x64 -p:PublishAot=true -o ./artifacts/win-x64

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: rox-aot-win-x64
          path: ./artifacts/win-x64

  aot-publish-linux:
    runs-on: ubuntu-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' || github.event.inputs.target == 'linux' || github.event.inputs.target == 'all'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish AOT (Linux)
        run: dotnet publish -c Release -r linux-x64 -p:PublishAot=true -o ./artifacts/linux-x64

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: rox-aot-linux-x64
          path: ./artifacts/linux-x64

  aot-publish-macos:
    runs-on: macos-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' || github.event.inputs.target == 'macos' || github.event.inputs.target == 'all'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish AOT (macOS)
        run: dotnet publish -c Release -r osx-arm64 -p:PublishAot=true -o ./artifacts/osx-arm64

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: rox-aot-osx-arm64
          path: ./artifacts/osx-arm64

  # -------------------------
  # NuGet
  # -------------------------
  nuget-pack:
    runs-on: ubuntu-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' || github.event.inputs.target == 'nuget-pack' || github.event.inputs.target == 'all'
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore
        run: dotnet restore
      - name: Pack NuGet
        run: dotnet pack -c Release -o ./nupkg
      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v4
        with:
          name: roo-nuget-package
          path: ./nupkg
          
  nuget-publish:
    runs-on: ubuntu-latest
    needs: nuget-pack
    if: ${{ github.event.inputs.target == 'nuget-publish' || github.event.inputs.target == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Download NuGet artifact
        uses: actions/download-artifact@v4
        with:
          name: roo-nuget-package
          path: ./nupkg
      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json